// <auto-generated />
using System;
using IEBEEJ.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IEBEEJ.Data.Migrations
{
    [DbContext(typeof(IEBEEJDBContext))]
    partial class IEBEEJDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IEBEEJ.Data.Entities.BidEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BidValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BidderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BidderId");

                    b.HasIndex("ItemID");

                    b.ToTable("Bids");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BidValue = 500m,
                            BidderId = 2,
                            Created = new DateTime(2024, 5, 24, 14, 5, 36, 256, DateTimeKind.Local).AddTicks(6537),
                            IsActive = false,
                            ItemID = 1
                        },
                        new
                        {
                            Id = 2,
                            BidValue = 600m,
                            BidderId = 1,
                            Created = new DateTime(2024, 5, 24, 14, 5, 36, 256, DateTimeKind.Local).AddTicks(6541),
                            IsActive = false,
                            ItemID = 1
                        },
                        new
                        {
                            Id = 3,
                            BidValue = 700m,
                            BidderId = 2,
                            Created = new DateTime(2024, 5, 24, 14, 5, 36, 256, DateTimeKind.Local).AddTicks(6543),
                            IsActive = false,
                            ItemID = 1
                        });
                });

            modelBuilder.Entity("IEBEEJ.Data.Entities.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Other"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fashion"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Readables"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Furniture"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Toys"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Decoration"
                        });
                });

            modelBuilder.Entity("IEBEEJ.Data.Entities.ItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EstimatedValueMax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstimatedValueMin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSold")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("SellerID")
                        .HasColumnType("int");

                    b.Property<string>("SendingAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StartingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UserEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserEntityId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 0,
                            Created = new DateTime(2024, 5, 24, 14, 5, 36, 256, DateTimeKind.Local).AddTicks(6471),
                            EndDate = new DateTime(2024, 5, 31, 14, 5, 36, 256, DateTimeKind.Local).AddTicks(6474),
                            EstimatedValueMax = 50000m,
                            EstimatedValueMin = 10m,
                            IsActive = false,
                            IsSold = false,
                            ItemDescription = "Doodoo",
                            ItemName = "Dada item",
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellerID = 1,
                            SendingAdress = "dok",
                            StartingPrice = 1m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Created = new DateTime(2024, 5, 24, 14, 5, 36, 256, DateTimeKind.Local).AddTicks(6481),
                            EndDate = new DateTime(2024, 5, 31, 14, 5, 36, 256, DateTimeKind.Local).AddTicks(6483),
                            EstimatedValueMax = 200m,
                            EstimatedValueMin = 50m,
                            IsActive = false,
                            IsSold = false,
                            ItemDescription = "Tight Shorts that make you pretty",
                            ItemName = "A TS",
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellerID = 1,
                            SendingAdress = "dok",
                            StartingPrice = 50m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Created = new DateTime(2024, 5, 24, 14, 5, 36, 256, DateTimeKind.Local).AddTicks(6486),
                            EndDate = new DateTime(2024, 5, 31, 14, 5, 36, 256, DateTimeKind.Local).AddTicks(6487),
                            EstimatedValueMax = 99m,
                            EstimatedValueMin = 15m,
                            IsActive = false,
                            IsSold = false,
                            ItemDescription = "A book about the wonders of Belgium",
                            ItemName = "Tiny Treasure Box",
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellerID = 2,
                            SendingAdress = "Ghent",
                            StartingPrice = 15m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Created = new DateTime(2024, 5, 24, 14, 5, 36, 256, DateTimeKind.Local).AddTicks(6490),
                            EndDate = new DateTime(2024, 5, 31, 14, 5, 36, 256, DateTimeKind.Local).AddTicks(6492),
                            EstimatedValueMax = 400m,
                            EstimatedValueMin = 99m,
                            IsActive = false,
                            IsSold = false,
                            ItemDescription = "An used old couch",
                            ItemName = "Hang Bank",
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellerID = 1,
                            SendingAdress = "My home",
                            StartingPrice = 80m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 4,
                            Created = new DateTime(2024, 5, 24, 14, 5, 36, 256, DateTimeKind.Local).AddTicks(6495),
                            EndDate = new DateTime(2024, 5, 31, 14, 5, 36, 256, DateTimeKind.Local).AddTicks(6496),
                            EstimatedValueMax = 400m,
                            EstimatedValueMin = 299m,
                            IsActive = false,
                            IsSold = false,
                            ItemDescription = "A grownups toy",
                            ItemName = "The Big Sheep Anatomy S-Doll",
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellerID = 1,
                            SendingAdress = "My home",
                            StartingPrice = 250m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 5,
                            Created = new DateTime(2024, 5, 24, 14, 5, 36, 256, DateTimeKind.Local).AddTicks(6500),
                            EndDate = new DateTime(2024, 5, 31, 14, 5, 36, 256, DateTimeKind.Local).AddTicks(6501),
                            EstimatedValueMax = 20000m,
                            EstimatedValueMin = 959m,
                            IsActive = false,
                            IsSold = false,
                            ItemDescription = "A painting from the Holy Roman Empire Time Period, for reals",
                            ItemName = "Holy Pope punching the heretic",
                            LastModified = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellerID = 2,
                            SendingAdress = "Centrum Brussel",
                            StartingPrice = 850m
                        });
                });

            modelBuilder.Entity("IEBEEJ.Data.Entities.StatusEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("IEBEEJ.Data.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("UserEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserEntityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "Thuis-Straat",
                            Birthday = new DateTime(1980, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created = new DateTime(2024, 5, 24, 14, 5, 36, 256, DateTimeKind.Local).AddTicks(6235),
                            Email = "Buddy@hotmail.com",
                            IsActive = false,
                            Name = "Buddy",
                            Password = "1230",
                            PhoneNumber = "1234567890",
                            Role = 0
                        },
                        new
                        {
                            Id = 2,
                            Adress = "Parque De Triumph",
                            Birthday = new DateTime(1995, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created = new DateTime(2024, 5, 24, 14, 5, 36, 256, DateTimeKind.Local).AddTicks(6307),
                            Email = "JaJa2015@hotmail.com",
                            IsActive = false,
                            Name = "Jacky Jackouis",
                            Password = "EnglishFrench",
                            PhoneNumber = "9876543210",
                            Role = 0
                        });
                });

            modelBuilder.Entity("IEBEEJ.Data.Entities.BidEntity", b =>
                {
                    b.HasOne("IEBEEJ.Data.Entities.UserEntity", "Bidder")
                        .WithMany("Bids")
                        .HasForeignKey("BidderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IEBEEJ.Data.Entities.ItemEntity", "Item")
                        .WithMany("AllBids")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bidder");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("IEBEEJ.Data.Entities.ItemEntity", b =>
                {
                    b.HasOne("IEBEEJ.Data.Entities.UserEntity", null)
                        .WithMany("ItemsForSale")
                        .HasForeignKey("UserEntityId");
                });

            modelBuilder.Entity("IEBEEJ.Data.Entities.UserEntity", b =>
                {
                    b.HasOne("IEBEEJ.Data.Entities.UserEntity", null)
                        .WithMany("LikedUsers")
                        .HasForeignKey("UserEntityId");
                });

            modelBuilder.Entity("IEBEEJ.Data.Entities.ItemEntity", b =>
                {
                    b.Navigation("AllBids");
                });

            modelBuilder.Entity("IEBEEJ.Data.Entities.UserEntity", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("ItemsForSale");

                    b.Navigation("LikedUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
